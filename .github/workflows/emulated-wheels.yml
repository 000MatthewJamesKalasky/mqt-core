name: Python Packaging Emulated Wheels

on:
  release:
    types: [published]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  build_wheels_emulation:
    name: üêç ${{ matrix.python }} wheels on ${{ matrix.arch }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        arch: ["s390x", "ppc64le"]
        python: ["cp38-*", "cp39-*", "cp310-*", "cp311-*", "cp312-*"]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: recursive
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Build wheels
        uses: pypa/cibuildwheel@v2.13
        env:
          CIBW_ARCHS_LINUX: ${{ matrix.arch }}
          CIBW_BUILD: ${{ matrix.python }}
          CIBW_TEST_SKIP: "cp*"
      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl

  deploy:
    if: github.event_name == 'release' && github.event.action == 'published'
    name: üöÄ Deploy to PyPI
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/mqt.core
    permissions:
      id-token: write
    needs: [build_wheels, build_sdist]

    steps:
      - uses: actions/download-artifact@v3
        with:
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@release/v1

  emulated-wheels-check:
    if: always()
    name: üö¶ Emulated Python Wheels Check
    needs: [build_wheels_emulation, deploy]
    runs-on: ubuntu-latest
    timeout-minutes: 1
    steps:
      - name: Decide whether the needed jobs succeeded or failed
        uses: re-actors/alls-green@release/v1
        with:
          allowed-skips: deploy
          jobs: ${{ toJSON(needs) }}
