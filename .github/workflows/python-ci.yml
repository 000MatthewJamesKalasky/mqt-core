name: Python

on:
  pull_request:
  merge_group:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  FORCE_COLOR: 3

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  lint:
    name: üêç Lint
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
          fetch-depth: 0
      - name: Setup ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          key: "python-lint"
      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"
          cache: "pip"
      - name: Set up mold as linker (Linux only)
        uses: rui314/setup-mold@v1
      - name: Run PyLint
        run: |
          echo "::add-matcher::$GITHUB_WORKSPACE/.github/matchers/pylint.json"
          pipx run nox -s pylint

  python-tests:
    name: üêç ${{ matrix.python-version }} Tests on ${{ matrix.runs-on }}
    runs-on: ${{ matrix.runs-on }}
    strategy:
      fail-fast: false
      matrix:
        runs-on: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.8", "3.11"]
        include:
          - runs-on: ubuntu-latest
            python-version: "3.9"
          - runs-on: ubuntu-latest
            python-version: "3.10"
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
          fetch-depth: 0
      - name: Setup ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          key: "tests-python-${{matrix.runs-on}}-${{matrix.python-version}}"
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"
      - name: Set up mold as linker (Linux only)
        uses: rui314/setup-mold@v1
      - name: Test on üêç ${{ matrix.python-version }}
        run: pipx run nox -s tests-${{ matrix.python-version }}

  coverage:
    name: üêç ${{ matrix.python-version }} Coverage
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.11"]
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
          fetch-depth: 0
      - name: Setup ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          key: "coverage-python-${{matrix.python-version}}"
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"
      - name: Set up mold as linker (Linux only)
        uses: rui314/setup-mold@v1
      - name: Run session
        run: pipx run nox -s tests-${{ matrix.python-version }} -- --cov --cov-report=xml
      - name: Upload Coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}

  dist:
    name: üêç Distribution build
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
          fetch-depth: 0
      - name: Setup ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          key: "dist-python"
      - name: Set up mold as linker (Linux only)
        uses: rui314/setup-mold@v1
      - uses: hynek/build-and-inspect-python-package@v1

  python-ci-check:
    if: always()
    name: üö¶ Python CI Check
    needs: [lint, python-tests, coverage, dist]
    runs-on: ubuntu-latest
    timeout-minutes: 1
    steps:
      - name: Decide whether the needed jobs succeeded or failed
        uses: re-actors/alls-green@release/v1
        with:
          jobs: ${{ toJSON(needs) }}
